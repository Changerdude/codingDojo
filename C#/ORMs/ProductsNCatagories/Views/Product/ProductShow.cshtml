@{
    ViewData["Title"] = "Product Page";
}
@model MyViewModel
<div class="container w-75 mx-auto border shadow p-3 mt-4">
    <h1 class="text-center display-4">@Model.Product.Name</h1>
    <div class="d-flex justify-content-evenly">
        <div class="text-center flex-grow-1">
            <h1 class="display-6">Catagories</h1>
            @{
            List<Catagory?> ProductCatagories = new List<Catagory> ();
            foreach (ProdCatRelation Relation in Model.Product.ProdCatRelations)
            {
                <p class="mb-2">@Relation.Catagory.Name  |  <a asp-action="ProductRelationDestroy" asp-controller="Product" asp-route-RelationId=@Relation.ProdCatRelationId asp-route-ProductId=@Relation.ProductId class="link-danger">Remove</a></p>
                ProductCatagories.Add(Relation.Catagory);
            }
            }
        </div>
        <div class="d-flex flex-column align-items-center flex-grow-1">
            <form asp-action="ProductRelationCreate" asp-controller="Product" method="post">
                <input type="hidden" asp-for="Relation.ProductId" value=@Model.Product.ProductId>
                <div class="mb-3">
                    <label asp-for="Relation.CatagoryId" class="form-label">Add Catagory</label>
                    <select asp-for="Relation.CatagoryId" class="form-select">
                        @{
                        List<Catagory> RemainingCatagory = Model.Catagories.Except(ProductCatagories).ToList();
                        foreach (Catagory Catagory in RemainingCatagory)
                        {
                            <option value=@Catagory.CatagoryId>@Catagory.Name</option>
                        }
                        }
                    </select>
                    <span class="text-danger" asp-validation-for="Relation.CatagoryId"></span>
                </div>
                <button class="btn btn-primary">Add Catagory</button>
            </form>
        </div>
    </div>
</div>