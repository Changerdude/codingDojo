@{
    ViewData["Title"] = "Catagory Page";
}
@model MyViewModel
<div class="container w-75 mx-auto border shadow p-3 mt-4">
    <h1 class="text-center display-4 mb-4">@Model.Catagory.Name</h1>
    <div class="d-flex justify-content-evenly flex-grow-1">
        <div class="text-center">
            <h1 class="display-6">Products</h1>
            @{
            List<Product> CatagoryProducts = new List<Product> ();
            foreach (ProdCatRelation Relation in Model.Catagory.ProdCatRelations)
            {
                <p class="mb-2">@Relation.Product.Name  |  <a asp-action="CatagoryRelationDestroy" asp-controller="Catagory" asp-route-RelationId=@Relation.ProdCatRelationId asp-route-CatagoryId=@Relation.CatagoryId class="link-danger">Remove</a></p>
                CatagoryProducts.Add(Relation.Product);
            }
            }
        </div>
        <div class="d-flex flex-column align-items-center flex-grow-1">
            <form asp-action="CatagoryRelationCreate" asp-controller="Catagory" method="post" class="mx-auto">
                <input type="hidden" asp-for="Relation.CatagoryId" value=@Model.Catagory.CatagoryId>
                <div class="mb-3">
                    <label asp-for="Relation.ProductId" class="form-label">Add Product</label>
                    <select asp-for="Relation.ProductId" class="form-select">
                        @{
                        List<Product> RemainingProduct = Model.Products.Except(CatagoryProducts).ToList();
                        foreach (Product Product in RemainingProduct)
                        {
                            <option value=@Product.ProductId>@Product.Name</option>
                        }
                        }
                    </select>
                    <span class="text-danger" asp-validation-for="Relation.ProductId"></span>
                </div>
                <button class="btn btn-primary">Add Product</button>
            </form>
        </div>
    </div>
</div>